---

- group: name={{ parity_group }} system=yes state=present
- user: name={{ parity_user }} group={{ parity_group }} home={{ parity_home }} shell=/bin/false state=present

#- name: download parity bin file
#  get_url: url={{ parity_source }} dest={{ parity_dst_bindir }}/parity checksum={{ parity_sum }}

#- name: copy parity bin file
#  copy: src=files/parity dest={{ parity_dst_bindir }}/parity owner=root group=staff mode=0755

- name: "check installed parity version"
  shell: "dpkg -s parity | grep '^Version:' | sed -n -e 's/^Version: //p'"
  register: parity_version
  ignore_errors: yes
  failed_when: false
  changed_when: false
  check_mode: no

- set_fact: parity_installed={{ parity_version.stdout_lines[0] is defined and parity_version.stdout_lines[0] == parity_version_string }}

- name: "download parity .deb package"
  get_url:
    url: "{{ parity_deb_url }}"
    dest: /root/parity.deb
    checksum: "{{ parity_deb_sum }}"
  register: downloaded
  when: not parity_installed

- name: "install parity .deb package"
  apt: deb="/root/parity.deb"
  when: downloaded is defined and downloaded.changed
  notify:
    - stop parity

- name: "delete parity .deb package"
  file: path="/root/parity.deb" state=absent
  when: downloaded is defined and downloaded.changed

- block:
  - name: "copy chain file"
    copy: src={{ parity_chain_file }} dest={{ parity_home }} owner={{ parity_user }} group={{ parity_group }} mode=0644
  - name: "set parity command line args for chainfile"
    set_fact: parity_extra_args="--chain {{ parity_home }}/{{ parity_chain_file | basename }} {{ parity_extra_args }}"
  when: parity_chain_file != ""

- name: "systemd parity service configuration file"
  template: src=templates/parity.service.j2 dest=/etc/systemd/system/parity.service owner=root group=root mode=0644
  notify:
    - reload systemd

- meta: flush_handlers

- name: "service parity enabled"
  service: name=parity enabled=yes state=started
